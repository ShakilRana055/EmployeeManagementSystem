@model EmployeeManagementSystem.Models.DepartmentVM
@{
    ViewData["Title"] = "Department";
    Layout = "~/Views/Shared/EmployeeLayout.cshtml";
}

<style>
    .odd {
        background-color: #b3ffff;
    }

    .even {
        background-color: #b3b3ff;
    }
    .textAlign{
        text-align:center;
    }
</style>

<div class="row">
    <div class="col-md-6">
        <form id="departmentCreatForm" enctype="multipart/form-data">
            <div class="card">
                <div id="headingOne" class="card-header bg-blue1">
                    <button type="button" data-toggle="collapse" data-target="#Collapse" aria-expanded="true" class="text-left m-0 p-0 btn btn-block" style="box-shadow: none;">
                        <h5 class="m-0 p-0" style="color: #fff;">Department</h5>
                    </button>
                </div>
                <div class="card-body">
                    <div id="Collapse" class="collapse show">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label asp-for="Name" class="control-label"></label>
                                    <input asp-for="Name" class="form-control" />
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="Code" class="control-label"></label>
                                    <input asp-for="Code" class="form-control" />
                                    <span asp-validation-for="Code" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="Description" class="control-label"></label>
                                    <textarea asp-for="Description" class="form-control" cols="3"></textarea>
                                    <span asp-validation-for="Description" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="reset" class="btn btn-secondary" id="departmentResetBtn">Reset</button>
                        <button type="button" id="departmentCreateBtn" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div id="headingTwo12" class="card-header bg-blue1">
                <button type="button" data-toggle="headingTwo45" data-target="#headingTwo" aria-expanded="true" class="text-left m-0 p-0 btn btn-block" style="box-shadow: none;">
                    <h5 class="m-0 p-0" style="color: #fff;">Department List</h5>
                </button>
            </div>
            <div class="card-body">
                <div id="headingTwo" class="headingTwo45 show table-responsive">
                    <table class="table table-hover table-bordered" id="departmentList">
                        <thead style="background-color: #ffd9b3;">
                            <tr>
                                <th>Name</th>
                                <th>Code</th>
                                <th>Description</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                </div>
            </div>
    </div>
</div>

@section Scripts{ 
<script>
    (function () {
        let selector = {
            departmentCreatForm: $("#departmentCreatForm"),
            name: $("#Name"),
            code: $("#Code"),
            description: $("#Description"),
            departmentCreateBtn: $("#departmentCreateBtn"),
            departmentList: $("#departmentList"),
            tableInformation: '',
            Id: '',
            edit: ".editDepartment",
            delete: ".deleteDepartment",
        }

        class Department {
            constructor() { }
            DepartmentList() {
                var departmentList = selector.departmentList.dataTable({
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "pageLength": 10,
                    "autoWidth": false,
                    "lengthMenu": [[10, 50, 100, 500, 1000, 10000], [10, 50, 100, 500, 1000, 10000]],
                    "order": [[0, "desc"]],
                    "ajax": {
                        "url": "/Department/DepartmentList/",
                        "type": "POST",
                        "data": function (data) {
                        },
                        "complete": function (json) {
                        }
                    },
                    "columnDefs": [
                        { "className": "textAlign", "targets": [0, 1, 2, 3] },
                    ],
                    "columns": [
                        { "data": "name", "name": "name", "autowidth": true, "orderable": true },
                        { "data": "code", "name": "code", "autowidth": true, "orderable": true },
                        { "data": "description", "name": "description", "autowidth": true, "orderable": true },
                        
                        {
                            "render": function (data, type, full, meta) {
                                return `
                                <div class="btn-group">
                                    <i class="fa fa-ellipsis-h" title = 'Actions' style = 'cursor:pointer;' data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></i>
                                  <div class="dropdown-menu" >
                                    <button style="font-size: inherit;" class="dropdown-item btn-rx editDepartment" name = "${full.name}" code = "${full.code}" description = "${full.description}" departmentId = "${full.id}" ><i class="fa fa-check-circle" aria-hidden="true"></i>Edit</button >
                                    <button style="font-size: inherit;" class="dropdown-item btn-rx deleteDepartment" departmentId = "${full.id}" > <i class="fa fa-times" aria-hidden="true"></i>Delete</button >
                                  </div>
                                </div>`;
                            }
                        },
                    ]
                });
                selector.tableInformation = departmentList;
            }
            SaveData() {
                var formData = new FormData(selector.departmentCreatForm[0]);
                let response = ajaxOperation.SaveAjax("/Department/Index", formData);
                tostrMessage.SavedMessage(response);
                response === true ? selector.departmentCreatForm[0].reset(): true;
                selector.tableInformation.fnFilter();
            }
            UpdateData() {
                var formData = new FormData(selector.departmentCreatForm[0]);
                formData.append("id", selector.Id);
                let response = ajaxOperation.SaveAjax("/Department/Update", formData);
                tostrMessage.UpdatedMessage(response);
                response === true ? selector.departmentCreatForm[0].reset() : true;
                selector.tableInformation.fnFilter();
                return response === true ? false : true;
            }
            DeleteData(Id) {
                Swal.fire({
                    title: 'Are You Sure?',
                    text: "",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes',
                    showConfirmButton: true,
                    allowEscapeKey: false,
                    allowOutsideClick: false,
                }).then((result) => {
                    if (result.value) {
                        let hasDone = ajaxOperation.DeleteAjaxById("/Department/Delete", Id);
                        tostrMessage.DeletedMessage(hasDone);
                        selector.tableInformation.fnFilter();
                    }
                });
            }
        }

        let department = new Department();
        let ajaxOperation = new AjaxOperation();
        let tostrMessage = new TostrMessage();

        window.onload = function () {
            department.DepartmentList();
        }

        selector.departmentCreateBtn.click(function () {
            if ($(this).text() === "Save")
                department.SaveData();
            else {
                if (department.UpdateData() === false) {
                    selector.departmentCreateBtn.text("Save");
                }
            }
        });

        $(document).on("click", selector.edit, function () {
            selector.Id = $(this).attr("departmentId");
            selector.name.val($(this).attr("name"));
            selector.code.val($(this).attr("code"));
            selector.description.val($(this).attr("description"));
            selector.departmentCreateBtn.text("Update");
        });

        $(document).on("click", selector.delete, function () {
            department.DeleteData($(this).attr("departmentId"));
        });
    })();
</script>
}